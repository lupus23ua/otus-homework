# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :"lesson-02-RAID" => {
        :box_name => "generic/centos8",
        :disks => {
            :sata1 => {
                 :dfile => './sata1.vdi',
                 :size => 10240,
                 :port => 1
            },
            :sata2 => {
                 :dfile => './sata2.vdi',
                 :size => 2048, # Megabytes
                 :port => 2
            },
            :sata3 => {
                 :dfile => './sata3.vdi',
                 :size => 1024,
                 :port => 3
            },
            :sata4 => {
                 :dfile => './sata4.vdi',
                 :size => 1024, # Megabytes
                 :port => 4
            }

        }


    },
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

            box.vm.provider :virtualbox do |vb|
                 vb.customize ["modifyvm", :id, "--memory", "1024"]
                 unless File.exist?("./sata1.vdi")
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                 end
                 boxconfig[:disks].each do |dname, dconf|
		     unless File.exist?(dconf[:dfile])
		         vb.customize ['createhd', '--filename', dconf[:dfile], '--size', dconf[:size]]
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
		 end
            end
            box.vm.provision "shell", inline: <<-SHELL
                if [[ ! -a ~root/.ssh/authorized_keys ]]
                    then
	            mkdir -p ~root/.ssh
                    cp ~vagrant/.ssh/auth* ~root/.ssh
	            dnf -y install mdadm smartmontools hdparm gdisk nano
                fi
                echo ""
            SHELL
        end
    end
end
